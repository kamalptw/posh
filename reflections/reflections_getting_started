Reflections on simple_cms lynda tutorial

1. What are the commands you used to get up to this point in your project
=> rails new simple_cms # to create a new project named simple_cms
=> rails server # to start localhost server

2. Why is it important to log your reflections
=> There is research which suggests that logging your reflections on  day to day basis helps you to master the concept really well and learn in a structured manner

3. What are the softwares that you intsalled before starting the project
=> installed Ruby 
=> installed RubyGems # also simple gem, is a packagemanager which allows you to install gems like ruby
=> installed rails 
=> installed webserver
=> installed texteditor

4. What is RVM
=> ruby version manager is a packagemanager which installs different versions of ruby and lets you work on different projects that may not be running on the same version of ruby

5.How do create a new rails project
=> rails new app_name -d mysql
if you don't put -d mysql rails will use default sqlite3 database

6. How do you generate a controller and view
=>rails generate controller controller_name view_name

7. How is the file structure of rails organized?
=> in no particular order
App
config
routes.rb
db
doc
gemfile
lib
vendor
log
Scripts
test
Tmp
Public
App is where 95% coding will happen.App has Controller, view , model, helpers and mailers
config contains files like Application.rb, database.yml, boot.rb,environment.rb
doc contains documentation about app, to do list etc.,
vendor contains plugins
log is used for errors and information
Scripts contains rails 
Test is used for test code
Tmp used for temporary files rails will use
Public contains all files that are listed in the public repository like Images, javascripts, stylesheets. these are all visible to users if they type in the url.

8. How does the webserver react to a browser request?
=> The webserver first checks the public directory and sees if it can get the webpage or asset it wants, if it is not able to, then it goes thru the rails framework and fethces the required webpage and takes it back thru view