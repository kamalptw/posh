1. What are databases?
=> datatbases are a set of tables
for a beginner in RoR 1 application = 1 database

2. What are rows ?
=> rows in Ror are objects for example 
Kevin is an object with attributes first_name , Last_name , age, sex , salary etc.,

3. What are columns ?
=> Columns represent attributes like first_name, last_name etc.,

4. What are fields?
=> The intersection of rows and columns are called fields. 
It has a single value

5. What is a schema ?
=> the structural definition of a database is called schema

6. What is a table?
=> A table is a set of rows and columns.
In Ror 1 model  = 1 table
It represents a single concept (noun)
its all lowercase and plural for example., subjects, users, pages.

7. What is a foreign key?
=> it is a table column whose values reference rows in another table.
It is the foundation of relational databases.	

8. What is an index?
=> Index is a datastructure on a table that will increase look up speed.

9. Create a database, drop a database, and create user?
create databse like so:
Create database db_name;
drop database db_name;
show databases; # to show databases
GRANT ALL PRIVILEGES ON db_name.* TO 'username'@'localhost' IDENTIFIED BY 'password'; # to create a user with password and grant him all privileges pertaning to the database
SHOW GRANTS FOR 'username'@'localhost'; # to show grants for the user

10. How do you configure the project to connect to the database?
=> You have to go to congig/databases.yml file and in the development: (default environment for ror) change the username from 'root' to the 'username' you just created. 
you have to input the password in the password field.
to check if its connceted you could rake db:schema:dump
and check if there is a schema.rb file created in the config folder.

11. What is RAKE? How would you use it?
Rake is a simple ruby helper program which is a variation of 'make' in terminal unix CLIs
Rake helps to accomplish tasks. One of the prominent being:
rake db:migrate
rakefile stores a list of all tasks to be performed.
rake -T to see a list of commands it can perform.
We can also pass variables like the environment using ALL CAPS and '='
rake db:schema:dump RAILS_ENV=development

12. What is a databse migration ? why wud u use it?
=> migration is a set of databse instructions
Its written in ruby
I would use db:migrate as migration is useful in the following ways:
migration is used to move up to a new state or move down back to a previous state
keeps database schema with application code
is executable and repeatable # when you move to another computer u just need to run migrations and ur db will be in the same state as the othe computer
Allows sharing schema changes
helps with versioning eg., git, subversion etc.,
Allows writing in ruby instead of sql
has access to ruby application code # creating a column is very simple

13. How do you generate a migration?
=> rails generate migration name_in_camel_case
these migration ruby files have two methods
up and down

14. How do you generate a model and what happens along with it?
=> rails generate model name_in_sentence_case
when you generate a model, a migration file also gets generated.
for example., with a model "User", a migration file automatically gets generated called "YYYYMMDDHHMMSS_create_users.rb"
the default method is def change with code as follows:
create_table :users do |t|
	end
you can use the the variable t to create ur table in this format
t.type "name", :options 
ex., t.string "username", :default => "", :null => false
An "id" column  is created automatically for the table.

15. What is a foreign key and how do you assign it?
foreign key is a column used to reference rows in another table.
suppose a subject has many pages, and a page inturn has many sections. Then you can represent this relation in three different tables, connected by a foreign key to give the relationship

ex.,
in pages table
t.references :subjects # can also use t.string "subject_id"
in sections table
t.references :pages	   # can also use t.string "page_id"

16. How would you index a column? where do you use it?
=> index make the searching faster . You can use it in places where searching will be done frequently, ideally "foreign key" should be indexed.
add_index("name_of_table","name_of_column")